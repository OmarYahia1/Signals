from scipy.fftpack import fft
import numpy as np
import matplotlib.pyplot as plt
import sounddevice as sd
N = 3*1024
f = np. linspace(0,512,int(N/2))
t = np.linspace(0,3,12*1024)
fi=np.array([392,392,440,392,293.66,261.63])
Fi=np.array([0,0,0,0,0,0])
Ti= np.array([0,0.3,0.4,0.5,0.6,0.9,1.1,1.5,1.6,1.9,2,2.4])
i=0
j=0
x=np.zeros(np.shape(t))

while i<6:
    y= np.sin(2*np.pi*Fi[i]*t)+np.sin(2*np.pi*fi[i]*t)
    x=x+np.reshape(y*[(t>=Ti[j]) & (t<=Ti[j+1])],np.shape(t))
    i+=1
    j+=2
x_f =fft(x)
x_f =2/N*np.abs(x_f[0:np.int(N/2)])
fn1=np.random.randint(0,512)
fn2=np.random.randint(0,512)
n =np.sin(2*fn1*np.pi*t) + np.sin(2*fn2*np.pi*t)
xn= x + n
xn_f = fft(xn)
xn_f = 2/N*np.abs(xn_f[0:np.int(N/2)])
xmax= np.max(x_f)+0.1
i=0
j=0
maximum= np.array([0,0])
while i<len(f):
    if(xn_f[i]>xmax):
        if(j<len(maximum)):
            maximum[j]=i
            j+=1
    i+=1
x_filtered = xn - (np.sin(2*np.round(f[maximum[0]])*np.pi*t)+np.sin(2*np.round(f[maximum[1]])*np.pi*t))
x_filtered_f = fft(x_filtered)
x_filtered_f = 2/N*np.abs(x_filtered_f[0:np.int(N/2)])
plt.figure(1)
plt.subplot(3,1,1)
plt.plot(t,x)
plt.subplot(3,1,2)
plt.plot(t,xn)
plt.subplot(3,1,3)
plt.plot(t,x_filtered)
plt.figure(2)
plt.subplot(3,1,1)
plt.plot(f,x_f)
plt.subplot(3,1,2)
plt.plot(f,xn_f)
plt.subplot(3,1,3)
plt.plot(f,x_filtered_f)

sd.play(x_filtered , 3*1024)
